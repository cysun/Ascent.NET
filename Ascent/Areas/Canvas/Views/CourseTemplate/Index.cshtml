@inject IAuthorizationService AuthorizationService
@model List<CourseTemplate>
@{
    ViewData["Title"] = "Course Templates";
}
<nav>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Canvas</a></li>
        <li class="breadcrumb-item active">Course Templates</li>
    </ol>
</nav>

<div class="row g-3">
    @if (Model.Count > 0)
    {
        <div class="col-lg-6">
            <ul class="list-group">
                @foreach (var courseTemplate in Model)
                {
                    <li class="list-group-item">
                        <a asp-action="View" asp-route-id="@courseTemplate.Id">@courseTemplate.Course.Code @courseTemplate.Course.Title</a>
                    </li>
                }
            </ul>
        </div>
    }
    @if ((await AuthorizationService.AuthorizeAsync(User, Constants.Policy.CanWrite)).Succeeded)
    {
        <div class="col-lg-6">
            <form method="post" asp-action="Add">
                <div class="row">
                    <div class="col-auto">
                        <input id="searchCourse" name="prefix" class="form-control" placeholder="Search course to add">
                    </div>
                    <div class="col-auto">
                        <input id="courseId" name="courseId" type="hidden" />
                        <button type="reset" class="btn btn-secondary me-2">Cancel</button>
                        <button type="submit" class="btn btn-primary">Add</button>
                    </div>
                </div>
            </form>
        </div>
    }
</div>

@section Scripts{
    <script src="~/js/autocomplete.js" asp-append-version="true"></script>
    <script>
        $(function () {
            const field = document.getElementById("searchCourse");
            const ac = new Autocomplete(field, {
                onInput: function () {
                    $.ajax({
                        url: "/course/autocomplete",
                        data: { prefix: $("#searchCourse").val() },
                        success: results => ac.setData(results.map(r =>
                            ({ label: r.code, value: r.id })))
                    })
                },
                onSelectItem: ({ label, value }) => {
                    $("#courseId").val(value);
                }
            });
        });
    </script>
}
