@using System.Text.Json
@model Dictionary<ConstituencyType, object[][]>
@{
    ViewData["Title"] = "Outcome Survey Charts - Program";
}
<nav>
    <ol class="breadcrumb">
        <li class="breadcrumb-item d-none d-md-block"><a asp-controller="Survey" asp-action="Index">Surveys</a></li>
        <li class="breadcrumb-item d-none d-md-block"><a asp-controller="OutcomeSurvey" asp-action="Index">Outcome Surveys</a></li>
        <li class="breadcrumb-item"><a asp-action="Index">Charts</a></li>
        <li class="breadcrumb-item active">@ViewBag.Program.Name</li>
    </ol>
</nav>

<div class="row mb-3">
    <div class="col-auto">
        <select id="yearSelect" name="year" class="form-select">
            @foreach (var year in ViewBag.Years)
            {
                if (year == ViewBag.Year)
                {
                    <option selected>@year</option>
                }
                else
                {
                    <option>@year</option>
                }
            }
        </select>
    </div>
    <div class="col-auto">
        <label class="col-form-label" for="plotLine">Plot Line</label>
    </div>
    <div class="col-auto">
        <input id="plotLine" type="number" class="form-control" size="2" value="70" min="5" max="95" />
    </div>
</div>

<div class="row row-cols-1 g-4">
    @foreach (var constituencyType in Enum.GetValues<ConstituencyType>())
    {
        if (Model.ContainsKey(constituencyType))
        {
            <div class="col">
                <div class="card">
                    <div class="card-header">@constituencyType.ToString() Survey</div>
                    <div class="card-body">
                        <div id="chart@(constituencyType)" style="height: 600px;"></div>
                        <table class="table table-bordered d-none d-md-table">
                            <thead>
                                <tr>
                                    <th>Outcome</th>
                                    <th>Strongly Disagree</th>
                                    <th>Disagree</th>
                                    <th>Neither Agree or Disagree</th>
                                    <th>Agree</th>
                                    <th>Strongly Agree</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var row in Model[constituencyType])
                                {
                                    <tr>
                                        @foreach (var col in row)
                                        {
                                            <td>@col</td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
    }
</div>

@section HeadScripts {
    <script src="https://code.highcharts.com/highcharts.js"></script>
}
@section Scripts {
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/offline-exporting.js"></script>
    <script>
        $(function () {
            var data = @Html.Raw(JsonSerializer.Serialize(Model));
            // console.log(data);
            var charts = [];
            for (const property in data) {
                let chart = {
                    container: `chart${property}`, // e.g. chartStudent
                    options: {
                        title: {
                            text: `@ViewBag.Program.Name Outcome Survey, @ViewBag.Year`
                        },
                        xAxis: {
                            categories: data[property].map(e => `SO #${e[0]}`)
                        },
                        yAxis: {
                            min: 0,
                            title: {
                                text: 'Percentage of Responses'
                            },
                            labels: {
                                formatter: function () {
                                    return this.value + '%';
                                }
                            },
                            plotLines: [{
                                value: 70,
                                color: 'blue',
                                width: 2
                            }]
                        },
                        series: [{
                            name: 'Strongly Disagree',
                            data: data[property].map(r => r[1])
                        }, {
                            name: 'Disagree',
                            data: data[property].map(r => r[2])
                        }, {
                            name: 'Neither Agree or Disagree',
                            data: data[property].map(r => r[3])
                        }, {
                            name: 'Agree',
                            data: data[property].map(r => r[4])
                        }, {
                            name: 'Strongly Agree',
                            data: data[property].map(r => r[5])
                        }],
                        chart: {
                            type: 'column'
                        },
                        plotOptions: {
                            column: {
                                stacking: 'percent'
                            }
                        },
                        exporting: {
                            sourceHeight: 600,
                            sourceWidth: 1200
                        },
                        colors: ['red', 'orange', 'yellow', 'greenyellow', 'green']
                    }
                };
                charts.push(Highcharts.chart(chart.container, chart.options));
            }
            $("#plotLine").change(function () {
                charts.forEach(c => c.update({
                    yAxis: {
                        plotLines: [{
                            value: $(this).val(),
                            color: 'blue',
                            width: 2
                        }]
                    }
                }));
            });
            $("#yearSelect").change(function () {
                window.location.href = "../program/@(ViewBag.Program.Id)?year=" + $(this).val();
            });
        });
    </script>
}