@inject IAuthorizationService AuthorizationService
@model Rubric
@{
    ViewData["Title"] = "View Rubric";
}
<nav>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Rubric" asp-action="Index">Rubrics</a></li>
        <li class="breadcrumb-item active me-auto">@Model.Name</li>
        @if ((await AuthorizationService.AuthorizeAsync(User, Constants.Policy.CanRead)).Succeeded)
        {
            <li>
                <a asp-controller="Assessment" asp-action="Index" asp-route-rubricId="@Model.Id" class="btn btn-outline-primary btn-sm"
               title="Assessment Data">
                    <i class="bi bi-bar-chart-line-fill"></i>
                </a>
            </li>
        }
        @if ((await AuthorizationService.AuthorizeAsync(User, Constants.Policy.CanWrite)).Succeeded)
        {
            <li>
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary btn-sm ms-2" title="Edit Rubric">
                    <i class="bi bi-pencil-fill"></i>
                </a>
            </li>
        }
    </ol>
</nav>

@{
    var index = 1;
}
@foreach (var criterion in ViewBag.Criteria)
{
    <div class="card mb-2">
        <div class="card-header">@(index++). @criterion.Name</div>
        <div class="card-body">
            <table class="table table-borderless">
                <tbody>
                    <tr>
                        @foreach (var rating in criterion.Ratings)
                        {
                            <td>
                                <strong>@rating.Name (@rating.Value)</strong><br>
                                <small>@Html.Raw(@rating.Description)</small>
                            </td>
                        }
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
}