@inject IAuthorizationService AuthorizationService
@model Program
@{
    ViewData["Title"] = "View Program";
    var maxShowCount = 6;
}
<nav>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Program" asp-action="Index">Programs</a></li>
        <li class="breadcrumb-item active me-auto">@Model.Name</li>
        @if ((await AuthorizationService.AuthorizeAsync(User, Constants.Policy.CanWrite)).Succeeded)
        {
            <li>
                <a asp-controller="Module" asp-action="Index" asp-route-programId="@Model.Id"
               class="btn btn-outline-primary btn-sm me-2" title="Edit Modules">
                    <i class="bi bi-boxes"></i>
                </a>
            </li>
            <li>
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary btn-sm" title="Edit Program">
                    <i class="bi bi-pencil-fill"></i>
                </a>
            </li>
        }
    </ol>
</nav>

@if (Model.HasObjectives)
{
    <div class="card mb-3">
        <div class="card-header d-flex align-items-center">
            <span class="me-auto">Program Educational Objectives (PEO)</span>
            <a asp-action="Objectives" asp-route-id="@Model.Id" title="Details" class="btn btn-outline-primary btn-sm">
                <i class="bi bi-three-dots"></i>
            </a>
        </div>
        <ul class="list-group list-group-numbered">
            @foreach (var objective in Model.Objectives)
            {
                <li class="list-group-item">@objective</li>
            }
        </ul>
    </div>
}

<div class="card mb-3">
    <div class="card-header">
        <span>Student Outcomes (SO)</span>
    </div>
    <ul class="list-group list-group-flush">
        @for (int i = 0; i < Model.Outcomes.Count; ++i)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <div class="me-auto">@(i + 1). @Model.Outcomes[i].Text</div>
                <a asp-action="Outcome" asp-route-id="@Model.Id" asp-route-index="@i" title="Details"
               class="btn btn-outline-primary btn-sm">
                    <i class="bi bi-three-dots"></i>
                </a>
            </li>
        }
    </ul>
</div>

@foreach (var module in ViewBag.Modules)
{
    <div id="m-id-@module.Id" class="card mb-3">
        <div class="card-header">@module.Name</div>
        @if (ViewBag.Items.ContainsKey(module.Id))
        {
            <ul class="list-group list-group-flush">
                @{
                    var count = 0;
                }
                @foreach (var item in ViewBag.Items[module.Id])
                {
                    if (count++ < maxShowCount)
                    {
                        <li class="list-group-item d-flex align-items-center">
                            @if (item.Type == ItemType.Page)
                            {
                                <a asp-area="" asp-controller="Page" asp-action="View" asp-route-id="@item.PageId">@item.Page.Subject</a>
                            }
                            else if (item.Type == ItemType.File)
                            {
                                <a asp-controller="File" asp-action="View" asp-route-id="@item.File.Id">@item.File.Name</a>
                                <a asp-controller="File" asp-action="Download" asp-route-id="@item.Id" class="btn btn-outline-primary btn-sm ms-auto">
                                    <i class="bi bi-download"></i>
                                </a>
                            }
                        </li>
                    }
                }
            </ul>
            @if (module.ItemCount > maxShowCount)
            {
                <div class="card-body">
                    <a asp-controller="Module" asp-action="View" asp-route-id="@module.Id" class="btn btn-primary">More</a>
                </div>
            }
        }
    </div>
}
