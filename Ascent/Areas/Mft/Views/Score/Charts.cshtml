@using System.Text.Json
@model List<MftScoreStat>
@{
    ViewData["Title"] = "MFT - Score Charts";
    var modelData = Model.Select(i => new object[] { i.Year.ToString(), i.Mean, i.Median,
        i.MeanPercentile, i.MedianPercentile, i.InstitutionPercentile }).ToArray();
}
<nav>
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">MFT</a></li>
        <li class="breadcrumb-item"><a asp-controller="Score" asp-action="Index">Scores</a></li>
        <li class="breadcrumb-item active">Charts</li>
    </ol>
</nav>

<div class="row">
    <label class="col-auto col-form-label">From</label>
    <div class="col-auto">
        <select id="fromYear" class="form-select">
            @foreach (var year in ViewBag.Years)
            {
                if (year == ViewBag.FromYear)
                {
                    <option selected>@year</option>
                }
                else
                {
                    <option>@year</option>
                }
            }
        </select>
    </div>
    <label class="col-auto col-form-label">To</label>
    <div class="col-auto">
        <select id="toYear" class="form-select">
            @foreach (var year in ViewBag.Years)
            {
                if (year == ViewBag.ToYear)
                {
                    <option selected>@year</option>
                }
                else
                {
                    <option>@year</option>
                }
            }
        </select>
    </div>
    <div class="col-auto">
        <label class="col-form-label" for="plotLine">Plot Line</label>
    </div>
    <div class="col-auto">
        <input id="plotLine" type="number" class="form-control" size="2" value="50" min="5" max="95" />
    </div>
</div>

<div class="card mt-3">
    <div class="card-header">Median Score</div>
    <div id="chart1" class="card-body" style="height: 600px;"></div>
</div>
<div class="card mt-3">
    <div class="card-header">Median Score Percentile</div>
    <div id="chart2" class="card-body" style="height: 600px;"></div>
</div>
<div class="card mt-3">
    <div class="card-header">Institution Percentile</div>
    <div id="chart3" class="card-body" style="height: 600px;"></div>
</div>

@section HeadScripts {
    <script src="https://code.highcharts.com/highcharts.js"></script>
}
@section Scripts {
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/offline-exporting.js"></script>
    <script>
        $(function () {
            var data = @(Html.Raw(JsonSerializer.Serialize(modelData))).reverse();
            // console.log(data);
            var charts = [{
                container: "chart1",
                options: {
                    title: {}, // set in setOptions
                    xAxis: {}, // set in setOptions
                    yAxis: {
                        min: 120,
                        title: {
                            enabled: false
                        }
                    },
                    legend: {
                        enabled: false
                    },
                    series: [{
                        name: "Median Score" // data is set in setOptions
                    }],
                    chart: {
                        type: 'column'
                    },
                    exporting: {
                        sourceHeight: 600,
                        sourceWidth: 1200
                    }
                }
            }, {
                container: "chart2",
                options: {
                    title: {}, // set in setOptions
                    xAxis: {}, // set in setOptions
                    yAxis: {
                        max: 100,
                        title: {
                            enabled: false
                        }
                    },
                    legend: {
                        enabled: false
                    },
                    series: [{
                        name: "Median Score Percentile" // data is set in setOptions
                    }],
                    chart: {
                        type: 'column'
                    },
                    exporting: {
                        sourceHeight: 600,
                        sourceWidth: 1200
                    }
                }
            }, {
                container: "chart3",
                options: {
                    title: {}, // set in setOptions
                    xAxis: {}, // set in setOptions
                    yAxis: {
                        max: 100,
                        title: {
                            enabled: false
                        },
                        plotLines: [{
                            value: 50,
                            color: 'blue',
                            width: 2
                        }]
                    },
                    legend: {
                        enabled: false
                    },
                    series: [{
                        name: "Institution Percentile" // data is set in setOptions
                    }],
                    chart: {
                        type: 'column'
                    },
                    exporting: {
                        sourceHeight: 600,
                        sourceWidth: 1200
                    }
                }
            }];

            var setOptions = function () {
                let fromYear = $("#fromYear").val();
                let toYear = $("#toYear").val();
                let selectedData = data.filter(e => e[0] >= fromYear && e[0] <= toYear);
                let categories = selectedData.map(e => e[0]);
                charts[0].options.title.text = `MFT Median Score, ${fromYear}-${toYear}`;
                charts[0].options.xAxis.categories = categories;
                charts[0].options.series[0].data = selectedData.map(e => e[2]);
                charts[1].options.title.text = `MFT Median Score Percentile, ${fromYear}-${toYear}`;
                charts[1].options.xAxis.categories = categories;
                charts[1].options.series[0].data = selectedData.map(e => e[4]);
                charts[2].options.title.text = `MFT institution Percentile, ${fromYear}-${toYear}`;
                charts[2].options.xAxis.categories = categories;
                charts[2].options.series[0].data = selectedData.map(e => e[5]);
            };

            setOptions();
            var highCharts = charts.map(chart => Highcharts.chart(chart.container, chart.options));

            $("#plotLine").change(function () {
                highCharts[2].update({
                    yAxis: {
                        plotLines: [{
                            value: $(this).val(),
                            color: 'blue',
                            width: 2
                        }]
                    }
                });
            });

            $("#fromYear, #toYear").change(function () {
                setOptions();
                for (let i = 0; i < highCharts.length; i++) {
                    highCharts[i].update(charts[i].options);
                }
            });
        });
    </script>
}