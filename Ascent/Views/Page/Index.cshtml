@inject IAuthorizationService AuthorizationService
@{
    ViewData["Title"] = "Pages";
}
<nav>
    <ol class="breadcrumb">
        <li class="breadcrumb-item active me-auto">Pages</li>
        @if ((await AuthorizationService.AuthorizeAsync(User, Constants.Policy.CanWrite)).Succeeded)
        {
            <li><a asp-action="Create" class="btn btn-outline-primary btn-sm" title="Add Page"><i class="bi bi-plus-lg"></i></a></li>
        }
    </ol>
</nav>

<form asp-action="Search" method="get" class="d-inline-flex mb-3">
    <input id="search" name="searchText" class="form-control me-2">
    <button class="btn btn-outline-primary me-2" type="submit"><i class="bi bi-search"></i></button>
</form>

<div class="row g-4">
    <div class="col-lg-6">
        <div class="card h-100">
            <div class="card-header">Pinned Pages</div>
            <div class="card-body">
                <ul class="list-group list-group-flush">
                    @foreach (var p in ViewBag.PinnedPages)
                    {
                        <li class="list-group-item">
                            <a asp-action="View" asp-route-id="@p.Id">@p.Subject</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="col-lg-6">
        <div class="card h-100">
            <div class="card-header">Recent Pages</div>
            <div class="card-body">
                <ul class="list-group list-group-flush">
                    @foreach (var p in ViewBag.LastViewedPages)
                    {
                        <li class="list-group-item">
                            <a asp-action="View" asp-route-id="@p.Id">@p.Subject</a>
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>
